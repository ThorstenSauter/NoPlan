name: Build solution and run tests

on:
  pull_request:
    branches:
      - main
    paths:
      - 'Directory.Packages.props'
      - 'NoPlan.sln'
      - 'src/**'
      - 'tests/**'

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build project and run tests
    runs-on: ubuntu-latest
    env:
      CONFIGURATION: 'Release'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build -c ${{ env.CONFIGURATION }} --no-restore
      - name: Test
        env:
          AzureAD__Audience: ${{ vars.AZUREAD_AUDIENCE }}
          AzureAD__ClientId: ${{ vars.AZUREAD_CLIENTID }}
          AzureAD__Domain: ${{ vars.AZUREAD_DOMAIN }}
          AzureAD__Instance: ${{ vars.AZUREAD_INSTANCE }}
          AzureAD__TenantId: ${{ vars.AZURE_TENANT_ID }}
          UserAuthenticationSettings__Audience: ${{ vars.AZUREAD_AUDIENCE }}
          UserAuthenticationSettings__ClientId: ${{ vars.INTEGRATION_TEST_CLIENT_ID }}
          UserAuthenticationSettings__ClientSecret: ${{ secrets.INTEGRATION_TEST_CLIENT_SECRET }}
          UserAuthenticationSettings__Password: ${{ secrets.INTEGRATION_TEST_PASSWORD }}
          UserAuthenticationSettings__TenantId: ${{ vars.AZURE_TENANT_ID }}
          UserAuthenticationSettings__Username: ${{ vars.INTEGRATION_TEST_USERNAME }}
        run: dotnet test -c ${{ env.CONFIGURATION }} --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: 'coverage/**/coverage.cobertura.xml'
          fail_ci_if_error: true

