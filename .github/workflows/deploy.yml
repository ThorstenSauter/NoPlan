name: Build image and deploy to Azure Container Apps

on:
  push:
    branches:
      [ main ]
    paths:
      - 'src/**'
      - '.github/workflows/deploy.yml'

  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  APP_NAME: aca-noplan-dev-001
  DOCKER_FILE: src/NoPlan.Api/Dockerfile
  IMAGE_NAME: crnoplandev001.azurecr.io/noplan-api
  REGISTRY_NAME: crnoplandev001
  RESOURCE_GROUP: rg-noplan-dev-001

jobs:
  build:
    name: Build the container image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the main branch
        uses: actions/checkout@v3
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Login to Azure Container Registry
        run: az acr login --name ${{ env.REGISTRY_NAME }}
      - name: Build image
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ github.sha }} -f ${{ env.DOCKER_FILE }} .
      - name: Run Snyk Vulnerability Scan
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_API_TOKEN }}
        with:
          image: ${{ env.IMAGE_NAME }}:${{ github.sha }}
          args: --file=${{ env.DOCKER_FILE }} --severity-threshold=high
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
      - name: Build and push image to registry
        run: docker push ${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    name: Deploy to Azure Container Apps
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Update image tag in Azure Container Apps
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp update -n ${{ env.APP_NAME }} -g ${{ env.RESOURCE_GROUP }} --image ${{ env.IMAGE_NAME }}:${{ github.sha }}
