name: Terraform validate and plan

on:
  pull_request:
    branches:
      - main
    paths:
      - 'infra/**'

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: ${{ vars.REGISTRY_NAME }}.azurecr.io/${{ vars.IMAGE_NAME }}:${{ github.sha }}

jobs:
  validate:
    name: Validate Terraform configuration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Terraform validate
        uses: ./.github/actions/terraform-validate
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: ${{ vars.INFRA_DIRECTORY }}

  plan-staging:
    name: Plan staging environment
    environment: staging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Terraform plan
        uses: ./.github/actions/terraform-plan
        with:
          environment-name: Staging
          github-token: ${{ secrets.GITHUB_TOKEN }}
          image-name: ${{ env.IMAGE_NAME }}
          tf-api-token: ${{ secrets.TF_API_TOKEN }}
          tf-cloud-organization: ${{ vars.TF_CLOUD_ORGANIZATION }}
          tf-cloud-workspace: ${{ vars.TF_CLOUD_WORKSPACE }}
          working-directory: ${{ vars.TF_WORKING_DIRECTORY }}

  plan-production:
    name: Plan production environment
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Terraform plan
        uses: ./.github/actions/terraform-plan
        with:
          environment-name: Production
          github-token: ${{ secrets.GITHUB_TOKEN }}
          image-name: ${{ env.IMAGE_NAME }}
          tf-api-token: ${{ secrets.TF_API_TOKEN }}
          tf-cloud-organization: ${{ vars.TF_CLOUD_ORGANIZATION }}
          tf-cloud-workspace: ${{ vars.TF_CLOUD_WORKSPACE }}
          working-directory: ${{ vars.TF_WORKING_DIRECTORY }}

  plan-global:
    name: Plan global environment
    environment: global
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Terraform plan
        uses: ./.github/actions/terraform-plan
        with:
          environment-name: Global
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tf-api-token: ${{ secrets.TF_API_TOKEN }}
          tf-cloud-organization: ${{ vars.TF_CLOUD_ORGANIZATION }}
          tf-cloud-workspace: ${{ vars.TF_CLOUD_WORKSPACE }}
          working-directory: ${{ vars.TF_WORKING_DIRECTORY }}
